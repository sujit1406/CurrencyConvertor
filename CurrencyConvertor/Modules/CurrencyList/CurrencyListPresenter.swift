//
//  CurrencyListPresenter.swift
//  CurrencyConvertor
//
//  Created by Sujith Antony on 25/10/2020.
//  Copyright (c) 2020 Sujith Antony. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import UIKit

final class CurrencyListPresenter {
    
    // MARK: - Private properties -
    
    private unowned let view: CurrencyListViewInterface
    private let interactor: CurrencyListInteractorInterface
    private let wireframe: CurrencyListWireframeInterface
    // MARK: - Lifecycle -
    var currencyType:CurrencyType
    
    var sections: [Section<Currency>] = [] {
        didSet {
            view.reloadData()
        }
    }
    
    init(view: CurrencyListViewInterface, interactor: CurrencyListInteractorInterface, wireframe: CurrencyListWireframeInterface, currencyType:CurrencyType) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.currencyType = currencyType
    }
}

// MARK: - Extensions -

extension CurrencyListPresenter: CurrencyListPresenterInterface {
    func numberOfSections() -> Int {
        return 1
    }
    
    func numberOrItems(in section: Int) -> Int {
        return CurrencyManager.shared.currencies.count
    }
    
    func item(at indexPath: IndexPath) -> CurrencyDetailsDescriptionItemInterface {
        return CurrencyManager.shared.currencies[indexPath.row]
    }
    
    private var currencyListSection: Section<Currency> {
        return Section(
            items: CurrencyManager.shared.currencies
        )
    }
    
    func viewDidLoad() {
        sections = [currencyListSection]
        view.reloadData()
    }
    
    func didSelectItem(at indexPath:IndexPath){
        if(currencyType == .source){
            CurrencyManager.shared.setSourceCurrency(index: indexPath.row)
        }else{
            CurrencyManager.shared.setDestinationCurrency(index: indexPath.row)
        }
        wireframe.popFromNavigationController(animated: true)
    }
}
